<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Display Properties
ideal_width = 0;
ideal_height=90

zoom= 4

max_zoom=1;
zoom_memory = zoom;
fullscreen = 0;

aspect_ratio = display_get_width()/display_get_height();

ideal_width = round(ideal_height*aspect_ratio);

//Pixel Perfect Scaling
if (display_get_width() mod ideal_width != 0)
{
    var d = round(display_get_width()/ideal_width);
    ideal_width=display_get_width()/d;   
}
if (display_get_height() mod ideal_height != 0)
{
    var d = round(display_get_height()/ideal_height);
    ideal_height=display_get_height()/d
}

//Check for odd numbers
if (ideal_width &amp; 1)
    ideal_width++;
if(ideal_height &amp; 1)
    ideal_height++;    

//Calculate Max Zoom
max_zoom=floor(display_get_width()/ideal_width);
    
show_debug_message(string(ideal_width) + " " + string(ideal_height));

for (var i=1; i&lt;=room_last; i+=1)
{
    if room_exists(i)
    {
        room_set_view(i,0,true, 0,0,ideal_width,ideal_height,0,0,ideal_width,ideal_height,0,0,0,0,-1);
        room_set_view_enabled(i,true);
    }
}


surface_resize(application_surface,min(ideal_width*zoom,ideal_width*4),min(ideal_height*zoom,ideal_height*4));
display_set_gui_size(ideal_width,ideal_height)
window_set_size(ideal_width*zoom, ideal_height*zoom)
alarm[0]=1; 



room_goto(room_next(room));


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Center Window
window_center();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Zoom Window &amp; Fullscreen

if keyboard_check_pressed(vk_f4)
{
    fullscreen = !fullscreen;
    window_set_fullscreen(fullscreen);
    
    if window_get_fullscreen()
    {
        zoom_memory = zoom
        zoom = max_zoom   
    }
    else
    {
        zoom = zoom_memory
    }
    
    surface_resize(application_surface,min(ideal_width*zoom,ideal_width*4),min(ideal_height*zoom,ideal_height*4));
}

if (keyboard_check_pressed(ord("Z"))) and !window_get_fullscreen()
{       
    zoom++;
    if zoom &gt; max_zoom
        zoom = 1;

    window_set_size(ideal_width*zoom, ideal_height*zoom)
    surface_resize(application_surface,min(ideal_width*zoom,ideal_width*4),min(ideal_height*zoom,ideal_height*4));
    alarm[0]=1
}





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set Room Speed
room_speed = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Display Write Specs Debug

/*
draw_set_colour(c_black)
draw_text(50,50,string(fps_real))
draw_set_colour(c_white)
draw_text(51,51,string(fps_real))
*/
/*

draw_text(100,100,display_write_specs(display.screen)+"#"+
              display_write_specs(display.window)+"#"+
              display_write_specs(display.app_surface)+"#"+
              display_write_specs(display.view)+"#"+
              display_write_specs(display.gui)
              );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
